let B=new DataView(new ArrayBuffer);function b(c){return B.buffer!==c.buffer&&(B=new DataView(c.buffer)),B}function be(c){return c>>>0}const E=new TextDecoder("utf-8"),_e=new TextEncoder("utf-8");function R(c,e,r){if(typeof c!="string")throw new TypeError("expected a string");if(c.length===0)return j=0,1;let s=0,i=0,t=0;for(;c.length>0;){i=e(i,s,1,s+c.length),s+=c.length;const{read:n,written:o}=_e.encodeInto(c,new Uint8Array(r.buffer,i+t,s-t));t+=o,c=c.slice(n)}return s>t&&(i=e(i,s,1,t)),j=t,i}let j=0;class L{constructor(){this.list=[],this.head=0}insert(e){this.head>=this.list.length&&this.list.push({next:this.list.length+1,val:void 0});const r=this.head,s=this.list[r];return this.head=s.next,s.next=-1,s.val=e,r}get(e){if(e>=this.list.length)throw new RangeError("handle index not valid");const r=this.list[e];if(r.next===-1)return r.val;throw new RangeError("handle index not valid")}remove(e){const r=this.get(e),s=this.list[e];return s.val=void 0,s.next=this.head,this.head=e,r}}function N(){throw new RangeError("invalid variant discriminant for bool")}class H{constructor(){this._resource0_slab=new L,this._resource1_slab=new L}addToImports(e){"canonical_abi"in e||(e.canonical_abi={}),e.canonical_abi["resource_drop_rb-iseq"]=r=>{this._resource0_slab.remove(r).drop()},e.canonical_abi["resource_clone_rb-iseq"]=r=>{const s=this._resource0_slab.get(r);return this._resource0_slab.insert(s.clone())},e.canonical_abi["resource_get_rb-iseq"]=r=>this._resource0_slab.get(r)._wasm_val,e.canonical_abi["resource_new_rb-iseq"]=r=>(this._registry0,this._resource0_slab.insert(new ge(r,this))),e.canonical_abi["resource_drop_rb-abi-value"]=r=>{this._resource1_slab.remove(r).drop()},e.canonical_abi["resource_clone_rb-abi-value"]=r=>{const s=this._resource1_slab.get(r);return this._resource1_slab.insert(s.clone())},e.canonical_abi["resource_get_rb-abi-value"]=r=>this._resource1_slab.get(r)._wasm_val,e.canonical_abi["resource_new_rb-abi-value"]=r=>(this._registry1,this._resource1_slab.insert(new k(r,this)))}async instantiate(e,r){if(r=r||{},this.addToImports(r),e instanceof WebAssembly.Instance)this.instance=e;else if(e instanceof WebAssembly.Module)this.instance=await WebAssembly.instantiate(e,r);else if(e instanceof ArrayBuffer||e instanceof Uint8Array){const{instance:s}=await WebAssembly.instantiate(e,r);this.instance=s}else{const{instance:s}=await WebAssembly.instantiateStreaming(e,r);this.instance=s}this._exports=this.instance.exports,this._registry0=new FinalizationRegistry(this._exports["canonical_abi_drop_rb-iseq"]),this._registry1=new FinalizationRegistry(this._exports["canonical_abi_drop_rb-abi-value"])}rubyShowVersion(){this._exports["ruby-show-version: func() -> ()"]()}rubyInit(){this._exports["ruby-init: func() -> ()"]()}rubySysinit(e){const r=this._exports.memory,s=this._exports.cabi_realloc,i=e,t=i.length,n=s(0,0,4,t*8);for(let o=0;o<i.length;o++){const a=i[o],l=n+o*8,u=R(a,s,r),f=j;b(r).setInt32(l+4,f,!0),b(r).setInt32(l+0,u,!0)}this._exports["ruby-sysinit: func(args: list<string>) -> ()"](n,t)}rubyOptions(e){const r=this._exports.memory,s=this._exports.cabi_realloc,i=e,t=i.length,n=s(0,0,4,t*8);for(let a=0;a<i.length;a++){const l=i[a],u=n+a*8,f=R(l,s,r),h=j;b(r).setInt32(u+4,h,!0),b(r).setInt32(u+0,f,!0)}const o=this._exports["ruby-options: func(args: list<string>) -> handle<rb-iseq>"](n,t);return this._resource0_slab.remove(o)}rubyScript(e){const r=this._exports.memory,s=this._exports.cabi_realloc,i=R(e,s,r),t=j;this._exports["ruby-script: func(name: string) -> ()"](i,t)}rubyInitLoadpath(){this._exports["ruby-init-loadpath: func() -> ()"]()}rbEvalStringProtect(e){const r=this._exports.memory,s=this._exports.cabi_realloc,i=R(e,s,r),t=j,n=this._exports["rb-eval-string-protect: func(str: string) -> tuple<handle<rb-abi-value>, s32>"](i,t);return[this._resource1_slab.remove(b(r).getInt32(n+0,!0)),b(r).getInt32(n+4,!0)]}rbFuncallvProtect(e,r,s){const i=this._exports.memory,t=this._exports.cabi_realloc,n=e;if(!(n instanceof k))throw new TypeError("expected instance of RbAbiValue");const o=s,a=o.length,l=t(0,0,4,a*4);for(let f=0;f<o.length;f++){const h=o[f],d=l+f*4,_=h;if(!(_ instanceof k))throw new TypeError("expected instance of RbAbiValue");b(i).setInt32(d+0,this._resource1_slab.insert(_.clone()),!0)}const u=this._exports["rb-funcallv-protect: func(recv: handle<rb-abi-value>, mid: u32, args: list<handle<rb-abi-value>>) -> tuple<handle<rb-abi-value>, s32>"](this._resource1_slab.insert(n.clone()),be(r),l,a);return[this._resource1_slab.remove(b(i).getInt32(u+0,!0)),b(i).getInt32(u+4,!0)]}rbIntern(e){const r=this._exports.memory,s=this._exports.cabi_realloc,i=R(e,s,r),t=j;return this._exports["rb-intern: func(name: string) -> u32"](i,t)>>>0}rbErrinfo(){const e=this._exports["rb-errinfo: func() -> handle<rb-abi-value>"]();return this._resource1_slab.remove(e)}rbClearErrinfo(){this._exports["rb-clear-errinfo: func() -> ()"]()}rstringPtr(e){const r=this._exports.memory,s=e;if(!(s instanceof k))throw new TypeError("expected instance of RbAbiValue");const i=this._exports["rstring-ptr: func(value: handle<rb-abi-value>) -> string"](this._resource1_slab.insert(s.clone())),t=b(r).getInt32(i+0,!0),n=b(r).getInt32(i+4,!0),o=E.decode(new Uint8Array(r.buffer,t,n));return this._exports["cabi_post_rstring-ptr"](i),o}rbVmBugreport(){this._exports["rb-vm-bugreport: func() -> ()"]()}rbGcEnable(){const r=this._exports["rb-gc-enable: func() -> bool"]();return r==0?!1:r==1?!0:N()}rbGcDisable(){const r=this._exports["rb-gc-disable: func() -> bool"]();return r==0?!1:r==1?!0:N()}rbSetShouldProhibitRewind(e){const s=this._exports["rb-set-should-prohibit-rewind: func(new-value: bool) -> bool"](e?1:0);return s==0?!1:s==1?!0:N()}}class ge{constructor(e,r){this._wasm_val=e,this._obj=r,this._refcnt=1,r._registry0.register(this,e,this)}clone(){return this._refcnt+=1,this}drop(){if(this._refcnt-=1,this._refcnt!==0)return;this._obj._registry0.unregister(this);const e=this._obj._exports["canonical_abi_drop_rb-iseq"],r=this._wasm_val;delete this._obj,delete this._refcnt,delete this._wasm_val,e(r)}}class k{constructor(e,r){this._wasm_val=e,this._obj=r,this._refcnt=1,r._registry1.register(this,e,this)}clone(){return this._refcnt+=1,this}drop(){if(this._refcnt-=1,this._refcnt!==0)return;this._obj._registry1.unregister(this);const e=this._obj._exports["canonical_abi_drop_rb-abi-value"],r=this._wasm_val;delete this._obj,delete this._refcnt,delete this._wasm_val,e(r)}}function pe(c,e,r){"rb-js-abi-host"in c||(c["rb-js-abi-host"]={}),c["rb-js-abi-host"]["eval-js: func(code: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(i,t,n){const o=r("memory"),a=i,l=t,u=E.decode(new Uint8Array(o.buffer,a,l)),h=e.evalJs(u);switch(h.tag){case"success":{const d=h.val;b(o).setInt8(n+0,0,!0),b(o).setInt32(n+4,s.insert(d),!0);break}case"failure":{const d=h.val;b(o).setInt8(n+0,1,!0),b(o).setInt32(n+4,s.insert(d),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},c["rb-js-abi-host"]["is-js: func(value: handle<js-abi-value>) -> bool"]=function(i){return e.isJs(s.get(i))?1:0},c["rb-js-abi-host"]["instance-of: func(value: handle<js-abi-value>, klass: handle<js-abi-value>) -> bool"]=function(i,t){return e.instanceOf(s.get(i),s.get(t))?1:0},c["rb-js-abi-host"]["global-this: func() -> handle<js-abi-value>"]=function(){const i=e.globalThis();return s.insert(i)},c["rb-js-abi-host"]["int-to-js-number: func(value: s32) -> handle<js-abi-value>"]=function(i){const t=e.intToJsNumber(i);return s.insert(t)},c["rb-js-abi-host"]["float-to-js-number: func(value: float64) -> handle<js-abi-value>"]=function(i){const t=e.floatToJsNumber(i);return s.insert(t)},c["rb-js-abi-host"]["string-to-js-string: func(value: string) -> handle<js-abi-value>"]=function(i,t){const n=r("memory"),o=i,a=t,l=E.decode(new Uint8Array(n.buffer,o,a)),u=e.stringToJsString(l);return s.insert(u)},c["rb-js-abi-host"]["bool-to-js-bool: func(value: bool) -> handle<js-abi-value>"]=function(i){const t=i,n=e.boolToJsBool(t==0?!1:t==1?!0:N());return s.insert(n)},c["rb-js-abi-host"]["proc-to-js-function: func(value: u32) -> handle<js-abi-value>"]=function(i){const t=e.procToJsFunction(i>>>0);return s.insert(t)},c["rb-js-abi-host"]["rb-object-to-js-rb-value: func(raw-rb-abi-value: u32) -> handle<js-abi-value>"]=function(i){const t=e.rbObjectToJsRbValue(i>>>0);return s.insert(t)},c["rb-js-abi-host"]["js-value-to-string: func(value: handle<js-abi-value>) -> string"]=function(i,t){const n=r("memory"),o=r("cabi_realloc"),a=e.jsValueToString(s.get(i)),l=R(a,o,n),u=j;b(n).setInt32(t+4,u,!0),b(n).setInt32(t+0,l,!0)},c["rb-js-abi-host"]["js-value-to-integer: func(value: handle<js-abi-value>) -> variant { f64(float64), bignum(string) }"]=function(i,t){const n=r("memory"),o=r("cabi_realloc"),l=e.jsValueToInteger(s.get(i));switch(l.tag){case"f64":{const u=l.val;b(n).setInt8(t+0,0,!0),b(n).setFloat64(t+8,+u,!0);break}case"bignum":{const u=l.val;b(n).setInt8(t+0,1,!0);const f=R(u,o,n),h=j;b(n).setInt32(t+12,h,!0),b(n).setInt32(t+8,f,!0);break}default:throw new RangeError("invalid variant specified for RawInteger")}},c["rb-js-abi-host"]["export-js-value-to-host: func(value: handle<js-abi-value>) -> ()"]=function(i){e.exportJsValueToHost(s.get(i))},c["rb-js-abi-host"]["import-js-value-from-host: func() -> handle<js-abi-value>"]=function(){const i=e.importJsValueFromHost();return s.insert(i)},c["rb-js-abi-host"]["js-value-typeof: func(value: handle<js-abi-value>) -> string"]=function(i,t){const n=r("memory"),o=r("cabi_realloc"),a=e.jsValueTypeof(s.get(i)),l=R(a,o,n),u=j;b(n).setInt32(t+4,u,!0),b(n).setInt32(t+0,l,!0)},c["rb-js-abi-host"]["js-value-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool"]=function(i,t){return e.jsValueEqual(s.get(i),s.get(t))?1:0},c["rb-js-abi-host"]["js-value-strictly-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool"]=function(i,t){return e.jsValueStrictlyEqual(s.get(i),s.get(t))?1:0},c["rb-js-abi-host"]["reflect-apply: func(target: handle<js-abi-value>, this-argument: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(i,t,n,o,a){const l=r("memory"),u=o,f=n,h=[];for(let g=0;g<u;g++){const x=f+g*4;h.push(s.get(b(l).getInt32(x+0,!0)))}const _=e.reflectApply(s.get(i),s.get(t),h);switch(_.tag){case"success":{const g=_.val;b(l).setInt8(a+0,0,!0),b(l).setInt32(a+4,s.insert(g),!0);break}case"failure":{const g=_.val;b(l).setInt8(a+0,1,!0),b(l).setInt32(a+4,s.insert(g),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},c["rb-js-abi-host"]["reflect-construct: func(target: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> handle<js-abi-value>"]=function(i,t,n){const o=r("memory"),a=n,l=t,u=[];for(let h=0;h<a;h++){const d=l+h*4;u.push(s.get(b(o).getInt32(d+0,!0)))}const f=e.reflectConstruct(s.get(i),u);return s.insert(f)},c["rb-js-abi-host"]["reflect-delete-property: func(target: handle<js-abi-value>, property-key: string) -> bool"]=function(i,t,n){const o=r("memory"),a=t,l=n,u=E.decode(new Uint8Array(o.buffer,a,l));return e.reflectDeleteProperty(s.get(i),u)?1:0},c["rb-js-abi-host"]["reflect-get: func(target: handle<js-abi-value>, property-key: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(i,t,n,o){const a=r("memory"),l=t,u=n,f=E.decode(new Uint8Array(a.buffer,l,u)),d=e.reflectGet(s.get(i),f);switch(d.tag){case"success":{const _=d.val;b(a).setInt8(o+0,0,!0),b(a).setInt32(o+4,s.insert(_),!0);break}case"failure":{const _=d.val;b(a).setInt8(o+0,1,!0),b(a).setInt32(o+4,s.insert(_),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},c["rb-js-abi-host"]["reflect-get-own-property-descriptor: func(target: handle<js-abi-value>, property-key: string) -> handle<js-abi-value>"]=function(i,t,n){const o=r("memory"),a=t,l=n,u=E.decode(new Uint8Array(o.buffer,a,l)),f=e.reflectGetOwnPropertyDescriptor(s.get(i),u);return s.insert(f)},c["rb-js-abi-host"]["reflect-get-prototype-of: func(target: handle<js-abi-value>) -> handle<js-abi-value>"]=function(i){const t=e.reflectGetPrototypeOf(s.get(i));return s.insert(t)},c["rb-js-abi-host"]["reflect-has: func(target: handle<js-abi-value>, property-key: string) -> bool"]=function(i,t,n){const o=r("memory"),a=t,l=n,u=E.decode(new Uint8Array(o.buffer,a,l));return e.reflectHas(s.get(i),u)?1:0},c["rb-js-abi-host"]["reflect-is-extensible: func(target: handle<js-abi-value>) -> bool"]=function(i){return e.reflectIsExtensible(s.get(i))?1:0},c["rb-js-abi-host"]["reflect-own-keys: func(target: handle<js-abi-value>) -> list<handle<js-abi-value>>"]=function(i,t){const n=r("memory"),o=r("cabi_realloc"),l=e.reflectOwnKeys(s.get(i)),u=l.length,f=o(0,0,4,u*4);for(let h=0;h<l.length;h++){const d=l[h],_=f+h*4;b(n).setInt32(_+0,s.insert(d),!0)}b(n).setInt32(t+4,u,!0),b(n).setInt32(t+0,f,!0)},c["rb-js-abi-host"]["reflect-prevent-extensions: func(target: handle<js-abi-value>) -> bool"]=function(i){return e.reflectPreventExtensions(s.get(i))?1:0},c["rb-js-abi-host"]["reflect-set: func(target: handle<js-abi-value>, property-key: string, value: handle<js-abi-value>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(i,t,n,o,a){const l=r("memory"),u=t,f=n,h=E.decode(new Uint8Array(l.buffer,u,f)),_=e.reflectSet(s.get(i),h,s.get(o));switch(_.tag){case"success":{const g=_.val;b(l).setInt8(a+0,0,!0),b(l).setInt32(a+4,s.insert(g),!0);break}case"failure":{const g=_.val;b(l).setInt8(a+0,1,!0),b(l).setInt32(a+4,s.insert(g),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},c["rb-js-abi-host"]["reflect-set-prototype-of: func(target: handle<js-abi-value>, prototype: handle<js-abi-value>) -> bool"]=function(i,t){return e.reflectSetPrototypeOf(s.get(i),s.get(t))?1:0},"canonical_abi"in c||(c.canonical_abi={});const s=new L;c.canonical_abi["resource_drop_js-abi-value"]=i=>{const t=s.remove(i);e.dropJsAbiValue&&e.dropJsAbiValue(t)}}class Fe{constructor(){this.instance=null,this.interfaceState={hasJSFrameAfterRbFrame:!1};const e=r=>{const s=["addToImports","instantiate","rbSetShouldProhibitRewind","rbGcDisable","rbGcEnable"],i=["constructor"].concat(s);for(const t of Object.getOwnPropertyNames(H.prototype)){if(i.includes(t))continue;const n=r[t];typeof n=="function"&&(r[t]=(...o)=>{if(this.interfaceState.hasJSFrameAfterRbFrame){const l=this.guest.rbSetShouldProhibitRewind(!0),u=this.guest.rbGcDisable(),f=Reflect.apply(n,r,o);return this.guest.rbSetShouldProhibitRewind(l),u||this.guest.rbGcEnable(),f}else return Reflect.apply(n,r,o)})}return r};this.guest=e(new H),this.transport=new we,this.exceptionFormatter=new ye}initialize(e=["ruby.wasm","-EUTF-8","-e_=0"]){const r=e.map(s=>s+"\0");this.guest.rubyInit(),this.guest.rubySysinit(r),this.guest.rubyOptions(r),this.eval('require "/bundle/setup"')}async setInstance(e){this.instance=e,await this.guest.instantiate(e)}addToImports(e){this.guest.addToImports(e);function r(i){return(...t)=>{try{return{tag:"success",val:i(...t)}}catch(n){if(n instanceof Y)throw n;return{tag:"failure",val:n}}}}e["rb-js-abi-host"]={rb_wasm_throw_prohibit_rewind_exception:(i,t)=>{const n=this.instance.exports.memory,o=new TextDecoder().decode(new Uint8Array(n.buffer,i,t));throw new Y(`Ruby APIs that may rewind the VM stack are prohibited under nested VM operation (${o})
Nested VM operation means that the call stack has sandwitched JS frames like JS -> Ruby -> JS -> Ruby caused by something like \`window.rubyVM.eval("JS.global[:rubyVM].eval('Fiber.yield')")\`

Please check your call stack and make sure that you are **not** doing any of the following inside the nested Ruby frame:
  1. Switching fibers (e.g. Fiber#resume, Fiber.yield, and Fiber#transfer)
     Note that \`evalAsync\` JS API switches fibers internally
  2. Raising uncaught exceptions
     Please catch all exceptions inside the nested operation
  3. Calling Continuation APIs
`)}},pe(e,(i=>{for(const[t,n]of Object.entries(i))typeof n=="function"&&(i[t]=(...o)=>{const a=this.interfaceState.hasJSFrameAfterRbFrame;this.interfaceState.hasJSFrameAfterRbFrame=!0;const l=Reflect.apply(n,i,o);return this.interfaceState.hasJSFrameAfterRbFrame=a,l});return i})({evalJs:r(i=>Function(i)()),isJs:i=>!0,globalThis:()=>{if(typeof globalThis<"u")return globalThis;if(typeof global<"u")return global;if(typeof window<"u")return window;throw new Error("unable to locate global object")},intToJsNumber:i=>i,floatToJsNumber:i=>i,stringToJsString:i=>i,boolToJsBool:i=>i,procToJsFunction:i=>{const t=this.rbValueOfPointer(i);return(...n)=>{t.call("call",...n.map(o=>this.wrap(o)))}},rbObjectToJsRbValue:i=>this.rbValueOfPointer(i),jsValueToString:i=>String(i),jsValueToInteger(i){return typeof i=="number"?{tag:"f64",val:i}:typeof i=="bigint"?{tag:"bignum",val:BigInt(i).toString(10)+"\0"}:typeof i=="string"?{tag:"bignum",val:i+"\0"}:typeof i>"u"?{tag:"f64",val:0}:{tag:"f64",val:Number(i)}},exportJsValueToHost:i=>{this.transport.takeJsValue(i)},importJsValueFromHost:()=>this.transport.consumeJsValue(),instanceOf:(i,t)=>typeof t=="function"?i instanceof t:!1,jsValueTypeof(i){return typeof i},jsValueEqual(i,t){return i==t},jsValueStrictlyEqual(i,t){return i===t},reflectApply:r((i,t,n)=>Reflect.apply(i,t,n)),reflectConstruct:function(i,t){throw new Error("Function not implemented.")},reflectDeleteProperty:function(i,t){throw new Error("Function not implemented.")},reflectGet:r((i,t)=>i[t]),reflectGetOwnPropertyDescriptor:function(i,t){throw new Error("Function not implemented.")},reflectGetPrototypeOf:function(i){throw new Error("Function not implemented.")},reflectHas:function(i,t){throw new Error("Function not implemented.")},reflectIsExtensible:function(i){throw new Error("Function not implemented.")},reflectOwnKeys:function(i){throw new Error("Function not implemented.")},reflectPreventExtensions:function(i){throw new Error("Function not implemented.")},reflectSet:r((i,t,n)=>Reflect.set(i,t,n)),reflectSetPrototypeOf:function(i,t){throw new Error("Function not implemented.")}}),i=>this.instance.exports[i])}printVersion(){this.guest.rubyShowVersion()}eval(e){return J(this,this.privateObject(),e)}evalAsync(e){const r=this.eval("require 'js'; JS");return oe(this,this.privateObject(),s=>{r.call("__eval_async_rb",this.wrap(e),s)})}wrap(e){return this.transport.importJsValue(e,this)}privateObject(){return{transport:this.transport,exceptionFormatter:this.exceptionFormatter}}rbValueOfPointer(e){const r=new k(e,this.guest);return new O(r,this,this.privateObject())}}class we{constructor(){this._takenJsValue=null}takeJsValue(e){this._takenJsValue=e}consumeJsValue(){return this._takenJsValue}exportJsValue(e){return e.call("__export_to_js"),this._takenJsValue}importJsValue(e,r){return this._takenJsValue=e,r.eval('require "js"; JS::Object').call("__import_from_js")}}class O{constructor(e,r,s){this.inner=e,this.vm=r,this.privateObject=s}call(e,...r){const s=r.map(i=>i.inner);return new O($(this.vm,this.privateObject,this.inner,e,s),this.vm,this.privateObject)}callAsync(e,...r){const s=this.vm.eval("require 'js'; JS");return oe(this.vm,this.privateObject,i=>{s.call("__call_async_method",this,this.vm.wrap(e),i,...r)})}[Symbol.toPrimitive](e){return e==="string"||e==="default"?this.toString():null}toString(){const e=$(this.vm,this.privateObject,this.inner,"to_s",[]);return this.vm.guest.rstringPtr(e)}toJS(){const r=this.vm.eval("JS").call("try_convert",this);return r.call("nil?").toString()==="true"?null:this.privateObject.transport.exportJsValue(r)}}var v;(function(c){c[c.None=0]="None",c[c.Return=1]="Return",c[c.Break=2]="Break",c[c.Next=3]="Next",c[c.Retry=4]="Retry",c[c.Redo=5]="Redo",c[c.Raise=6]="Raise",c[c.Throw=7]="Throw",c[c.Fatal=8]="Fatal",c[c.Mask=15]="Mask"})(v||(v={}));class ye{constructor(){this.literalsCache=null,this.isFormmatting=!1}format(e,r,s){class i extends Error{}if(this.isFormmatting)throw new i("Unexpected exception occurred during formatting exception message");this.isFormmatting=!0;try{return this._format(e,r,s)}finally{this.isFormmatting=!1}}_format(e,r,s){const[i,t,n]=(()=>{if(this.literalsCache==null){const u=[J(r,s,"0"),J(r,s,"1"),J(r,s,`"
"`)];return this.literalsCache=u,u}else return this.literalsCache})();let o,a,l;try{o=e.call("class").toString()}catch{o="unknown"}try{l=e.toString()}catch{l="unknown"}try{a=e.call("backtrace")}catch{return this.formatString(o,l)}if(a.call("nil?").toString()==="true")return this.formatString(o,l);try{const u=a.call("at",i),f=a.call("drop",t).call("join",n);return this.formatString(o,l,[u.toString(),f.toString()])}catch{return this.formatString(o,l)}}formatString(e,r,s){return s?`${s[0]}: ${r} (${e})
${s[1]}`:`${e}: ${r}`}}const se=(c,e,r)=>{switch(c&v.Mask){case v.None:break;case v.Return:throw new m("unexpected return");case v.Next:throw new m("unexpected next");case v.Break:throw new m("unexpected break");case v.Redo:throw new m("unexpected redo");case v.Retry:throw new m("retry outside of rescue clause");case v.Throw:throw new m("unexpected throw");case v.Raise:case v.Fatal:const s=new O(e.guest.rbErrinfo(),e,r);throw s.call("nil?").toString()==="true"?new m("no exception object"):(e.guest.rbClearErrinfo(),new m(r.exceptionFormatter.format(s,e,r)));default:throw new m(`unknown error tag: ${c}`)}};function ie(c,e){try{return e()}catch(r){if(r instanceof m)throw r;if(c.guest.rbVmBugreport(),r instanceof WebAssembly.RuntimeError&&r.message==="unreachable"){const s=new m(`Something went wrong in Ruby VM: ${r}`);throw s.stack=r.stack,s}else throw r}}const $=(c,e,r,s,i)=>{const t=c.guest.rbIntern(s+"\0");return ie(c,()=>{const[n,o]=c.guest.rbFuncallvProtect(r,t,i);return se(o,c,e),n})},J=(c,e,r)=>ie(c,()=>{const[s,i]=c.guest.rbEvalStringProtect(r+"\0");return se(i,c,e),new O(s,c,e)});function oe(c,e,r){return new Promise((s,i)=>{const t=c.wrap({resolve:s,reject:n=>{const o=new m(e.exceptionFormatter.format(n,c,e));i(o)}});r(t)})}class m extends Error{constructor(e){super(e)}}class Y extends m{constructor(e){super("Ruby Fatal Error: "+e)}}const K=0,X=1,S=0,p=8,me=20,Q=28,ve=31,A=44,xe=52,Z=54,je=55,w=58,ae=63,C=64;class D{static read_bytes(e,r){const s=new D;return s.buf=e.getUint32(r,!0),s.buf_len=e.getUint32(r+4,!0),s}static read_bytes_array(e,r,s){const i=[];for(let t=0;t<s;t++)i.push(D.read_bytes(e,r+8*t));return i}}class F{static read_bytes(e,r){const s=new F;return s.buf=e.getUint32(r,!0),s.buf_len=e.getUint32(r+4,!0),s}static read_bytes_array(e,r,s){const i=[];for(let t=0;t<s;t++)i.push(F.read_bytes(e,r+8*t));return i}}const Ee=0,Re=1,le=2,ee=2,V=3,ce=4;class Ie{head_length(){return 24}name_length(){return this.dir_name.byteLength}write_head_bytes(e,r){e.setBigUint64(r,this.d_next,!0),e.setBigUint64(r+8,this.d_ino,!0),e.setUint32(r+16,this.dir_name.length,!0),e.setUint8(r+20,this.d_type)}write_name_bytes(e,r,s){e.set(this.dir_name.slice(0,Math.min(this.dir_name.byteLength,s)),r)}constructor(e,r,s){this.d_ino=1n;const i=new TextEncoder().encode(r);this.d_next=e,this.d_namlen=i.byteLength,this.d_type=s,this.dir_name=i}}const Ue=1;class M{write_bytes(e,r){e.setUint8(r,this.fs_filetype),e.setUint16(r+2,this.fs_flags,!0),e.setBigUint64(r+8,this.fs_rights_base,!0),e.setBigUint64(r+16,this.fs_rights_inherited,!0)}constructor(e,r){this.fs_rights_base=0n,this.fs_rights_inherited=0n,this.fs_filetype=e,this.fs_flags=r}}const P=1,T=2,te=4,re=8;class z{write_bytes(e,r){e.setBigUint64(r,this.dev,!0),e.setBigUint64(r+8,this.ino,!0),e.setUint8(r+16,this.filetype),e.setBigUint64(r+24,this.nlink,!0),e.setBigUint64(r+32,this.size,!0),e.setBigUint64(r+38,this.atim,!0),e.setBigUint64(r+46,this.mtim,!0),e.setBigUint64(r+52,this.ctim,!0)}constructor(e,r){this.dev=0n,this.ino=0n,this.nlink=0n,this.atim=0n,this.mtim=0n,this.ctim=0n,this.filetype=e,this.size=r}}const Se=0;class Ae{write_bytes(e,r){e.setUint32(r,this.pr_name_len,!0)}constructor(e){this.pr_name_len=e}}class G{static dir(e){const r=new G;return r.tag=Se,r.inner=new Ae(e),r}write_bytes(e,r){e.setUint32(r,this.tag,!0),this.inner.write_bytes(e,r+4)}}let Te=class{enable(e){this.log=ke(e===void 0?!0:e,this.prefix)}get enabled(){return this.isEnabled}constructor(e){this.isEnabled=e,this.prefix="wasi:",this.enable(e)}};function ke(c,e){return c?console.log.bind(console,"%c%s","color: #265BA0",e):()=>{}}const y=new Te(!1);class ne extends Error{constructor(e){super("exit with exit code "+e),this.code=e}}let Ne=class{start(e){this.inst=e;try{return e.exports._start(),0}catch(r){if(r instanceof ne)return r.code;throw r}}initialize(e){this.inst=e,e.exports._initialize()}constructor(e,r,s,i={}){this.args=[],this.env=[],this.fds=[],y.enable(i.debug),this.args=e,this.env=r,this.fds=s;const t=this;this.wasiImport={args_sizes_get(n,o){const a=new DataView(t.inst.exports.memory.buffer);a.setUint32(n,t.args.length,!0);let l=0;for(const u of t.args)l+=u.length+1;return a.setUint32(o,l,!0),y.log(a.getUint32(n,!0),a.getUint32(o,!0)),0},args_get(n,o){const a=new DataView(t.inst.exports.memory.buffer),l=new Uint8Array(t.inst.exports.memory.buffer),u=o;for(let f=0;f<t.args.length;f++){a.setUint32(n,o,!0),n+=4;const h=new TextEncoder().encode(t.args[f]);l.set(h,o),a.setUint8(o+h.length,0),o+=h.length+1}return y.enabled&&y.log(new TextDecoder("utf-8").decode(l.slice(u,o))),0},environ_sizes_get(n,o){const a=new DataView(t.inst.exports.memory.buffer);a.setUint32(n,t.env.length,!0);let l=0;for(const u of t.env)l+=u.length+1;return a.setUint32(o,l,!0),y.log(a.getUint32(n,!0),a.getUint32(o,!0)),0},environ_get(n,o){const a=new DataView(t.inst.exports.memory.buffer),l=new Uint8Array(t.inst.exports.memory.buffer),u=o;for(let f=0;f<t.env.length;f++){a.setUint32(n,o,!0),n+=4;const h=new TextEncoder().encode(t.env[f]);l.set(h,o),a.setUint8(o+h.length,0),o+=h.length+1}return y.enabled&&y.log(new TextDecoder("utf-8").decode(l.slice(u,o))),0},clock_res_get(n,o){let a;switch(n){case X:{a=5000n;break}case K:{a=1000000n;break}default:return xe}return new DataView(t.inst.exports.memory.buffer).setBigUint64(o,a,!0),S},clock_time_get(n,o,a){const l=new DataView(t.inst.exports.memory.buffer);if(n===K)l.setBigUint64(a,BigInt(new Date().getTime())*1000000n,!0);else if(n==X){let u;try{u=BigInt(Math.round(performance.now()*1e6))}catch{u=0n}l.setBigUint64(a,u,!0)}else l.setBigUint64(a,0n,!0);return 0},fd_advise(n,o,a,l){return t.fds[n]!=null?t.fds[n].fd_advise(o,a,l):p},fd_allocate(n,o,a){return t.fds[n]!=null?t.fds[n].fd_allocate(o,a):p},fd_close(n){if(t.fds[n]!=null){const o=t.fds[n].fd_close();return t.fds[n]=void 0,o}else return p},fd_datasync(n){return t.fds[n]!=null?t.fds[n].fd_datasync():p},fd_fdstat_get(n,o){if(t.fds[n]!=null){const{ret:a,fdstat:l}=t.fds[n].fd_fdstat_get();return l!=null&&l.write_bytes(new DataView(t.inst.exports.memory.buffer),o),a}else return p},fd_fdstat_set_flags(n,o){return t.fds[n]!=null?t.fds[n].fd_fdstat_set_flags(o):p},fd_fdstat_set_rights(n,o,a){return t.fds[n]!=null?t.fds[n].fd_fdstat_set_rights(o,a):p},fd_filestat_get(n,o){if(t.fds[n]!=null){const{ret:a,filestat:l}=t.fds[n].fd_filestat_get();return l!=null&&l.write_bytes(new DataView(t.inst.exports.memory.buffer),o),a}else return p},fd_filestat_set_size(n,o){return t.fds[n]!=null?t.fds[n].fd_filestat_set_size(o):p},fd_filestat_set_times(n,o,a,l){return t.fds[n]!=null?t.fds[n].fd_filestat_set_times(o,a,l):p},fd_pread(n,o,a,l,u){const f=new DataView(t.inst.exports.memory.buffer),h=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const d=D.read_bytes_array(f,o,a),{ret:_,nread:g}=t.fds[n].fd_pread(h,d,l);return f.setUint32(u,g,!0),_}else return p},fd_prestat_get(n,o){const a=new DataView(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const{ret:l,prestat:u}=t.fds[n].fd_prestat_get();return u!=null&&u.write_bytes(a,o),l}else return p},fd_prestat_dir_name(n,o,a){if(t.fds[n]!=null){const{ret:l,prestat_dir_name:u}=t.fds[n].fd_prestat_dir_name();return u!=null&&new Uint8Array(t.inst.exports.memory.buffer).set(u,o),l}else return p},fd_pwrite(n,o,a,l,u){const f=new DataView(t.inst.exports.memory.buffer),h=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const d=F.read_bytes_array(f,o,a),{ret:_,nwritten:g}=t.fds[n].fd_pwrite(h,d,l);return f.setUint32(u,g,!0),_}else return p},fd_read(n,o,a,l){const u=new DataView(t.inst.exports.memory.buffer),f=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const h=D.read_bytes_array(u,o,a),{ret:d,nread:_}=t.fds[n].fd_read(f,h);return u.setUint32(l,_,!0),d}else return p},fd_readdir(n,o,a,l,u){const f=new DataView(t.inst.exports.memory.buffer),h=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){let d=0;for(;;){const{ret:_,dirent:g}=t.fds[n].fd_readdir_single(l);if(_!=0)return f.setUint32(u,d,!0),_;if(g==null)break;if(a-d<g.head_length()){d=a;break}const x=new ArrayBuffer(g.head_length());if(g.write_head_bytes(new DataView(x),0),h.set(new Uint8Array(x).slice(0,Math.min(x.byteLength,a-d)),o),o+=g.head_length(),d+=g.head_length(),a-d<g.name_length()){d=a;break}g.write_name_bytes(h,o,a-d),o+=g.name_length(),d+=g.name_length(),l=g.d_next}return f.setUint32(u,d,!0),0}else return p},fd_renumber(n,o){if(t.fds[n]!=null&&t.fds[o]!=null){const a=t.fds[o].fd_close();return a!=0?a:(t.fds[o]=t.fds[n],t.fds[n]=void 0,0)}else return p},fd_seek(n,o,a,l){const u=new DataView(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const{ret:f,offset:h}=t.fds[n].fd_seek(o,a);return u.setBigInt64(l,h,!0),f}else return p},fd_sync(n){return t.fds[n]!=null?t.fds[n].fd_sync():p},fd_tell(n,o){const a=new DataView(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const{ret:l,offset:u}=t.fds[n].fd_tell();return a.setBigUint64(o,u,!0),l}else return p},fd_write(n,o,a,l){const u=new DataView(t.inst.exports.memory.buffer),f=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const h=F.read_bytes_array(u,o,a),{ret:d,nwritten:_}=t.fds[n].fd_write(f,h);return u.setUint32(l,_,!0),d}else return p},path_create_directory(n,o,a){const l=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const u=new TextDecoder("utf-8").decode(l.slice(o,o+a));return t.fds[n].path_create_directory(u)}},path_filestat_get(n,o,a,l,u){const f=new DataView(t.inst.exports.memory.buffer),h=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const d=new TextDecoder("utf-8").decode(h.slice(a,a+l)),{ret:_,filestat:g}=t.fds[n].path_filestat_get(o,d);return g!=null&&g.write_bytes(f,u),_}else return p},path_filestat_set_times(n,o,a,l,u,f,h){const d=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const _=new TextDecoder("utf-8").decode(d.slice(a,a+l));return t.fds[n].path_filestat_set_times(o,_,u,f,h)}else return p},path_link(n,o,a,l,u,f,h){const d=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null&&t.fds[u]!=null){const _=new TextDecoder("utf-8").decode(d.slice(a,a+l)),g=new TextDecoder("utf-8").decode(d.slice(f,f+h));return t.fds[u].path_link(n,o,_,g)}else return p},path_open(n,o,a,l,u,f,h,d,_){const g=new DataView(t.inst.exports.memory.buffer),x=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const U=new TextDecoder("utf-8").decode(x.slice(a,a+l));y.log(U);const{ret:W,fd_obj:he}=t.fds[n].path_open(o,U,u,f,h,d);if(W!=0)return W;t.fds.push(he);const de=t.fds.length-1;return g.setUint32(_,de,!0),0}else return p},path_readlink(n,o,a,l,u,f){const h=new DataView(t.inst.exports.memory.buffer),d=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const _=new TextDecoder("utf-8").decode(d.slice(o,o+a));y.log(_);const{ret:g,data:x}=t.fds[n].path_readlink(_);if(x!=null){const U=new TextEncoder().encode(x);if(U.length>u)return h.setUint32(f,0,!0),p;d.set(U,l),h.setUint32(f,U.length,!0)}return g}else return p},path_remove_directory(n,o,a){const l=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const u=new TextDecoder("utf-8").decode(l.slice(o,o+a));return t.fds[n].path_remove_directory(u)}else return p},path_rename(n,o,a,l,u,f){throw"FIXME what is the best abstraction for this?"},path_symlink(n,o,a,l,u){const f=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[a]!=null){const h=new TextDecoder("utf-8").decode(f.slice(n,n+o)),d=new TextDecoder("utf-8").decode(f.slice(l,l+u));return t.fds[a].path_symlink(h,d)}else return p},path_unlink_file(n,o,a){const l=new Uint8Array(t.inst.exports.memory.buffer);if(t.fds[n]!=null){const u=new TextDecoder("utf-8").decode(l.slice(o,o+a));return t.fds[n].path_unlink_file(u)}else return p},poll_oneoff(n,o,a){throw"async io not supported"},proc_exit(n){throw new ne(n)},proc_raise(n){throw"raised signal "+n},sched_yield(){},random_get(n,o){const a=new Uint8Array(t.inst.exports.memory.buffer);for(let l=0;l<o;l++)a[n+l]=Math.random()*256|0},sock_recv(n,o,a){throw"sockets not supported"},sock_send(n,o,a){throw"sockets not supported"},sock_shutdown(n,o){throw"sockets not supported"},sock_accept(n,o){throw"sockets not supported"}}}};class q{fd_advise(e,r,s){return w}fd_allocate(e,r){return w}fd_close(){return 0}fd_datasync(){return w}fd_fdstat_get(){return{ret:w,fdstat:null}}fd_fdstat_set_flags(e){return w}fd_fdstat_set_rights(e,r){return w}fd_filestat_get(){return{ret:w,filestat:null}}fd_filestat_set_size(e){return w}fd_filestat_set_times(e,r,s){return w}fd_pread(e,r,s){return{ret:w,nread:0}}fd_prestat_get(){return{ret:w,prestat:null}}fd_prestat_dir_name(){return{ret:w,prestat_dir_name:null}}fd_pwrite(e,r,s){return{ret:w,nwritten:0}}fd_read(e,r){return{ret:w,nread:0}}fd_readdir_single(e){return{ret:w,dirent:null}}fd_seek(e,r){return{ret:w,offset:0n}}fd_sync(){return 0}fd_tell(){return{ret:w,offset:0n}}fd_write(e,r){return{ret:w,nwritten:0}}path_create_directory(e){return w}path_filestat_get(e,r){return{ret:w,filestat:null}}path_filestat_set_times(e,r,s,i,t){return w}path_link(e,r,s,i){return w}path_open(e,r,s,i,t,n){return{ret:w,fd_obj:null}}path_readlink(e){return{ret:w,data:null}}path_remove_directory(e){return w}path_rename(e,r,s){return w}path_symlink(e,r){return w}path_unlink_file(e){return w}}class Ve extends q{fd_fdstat_get(){return{ret:0,fdstat:new M(ce,0)}}fd_read(e,r){let s=0;for(const i of r)if(this.file_pos<this.file.data.byteLength){const t=this.file.data.slice(Number(this.file_pos),Number(this.file_pos+BigInt(i.buf_len)));e.set(t,i.buf),this.file_pos+=BigInt(t.length),s+=t.length}else break;return{ret:0,nread:s}}fd_pread(e,r,s){let i=0;for(const t of r)if(s<this.file.data.byteLength){const n=this.file.data.slice(Number(s),Number(s+BigInt(t.buf_len)));e.set(n,t.buf),s+=BigInt(n.length),i+=n.length}else break;return{ret:0,nread:i}}fd_seek(e,r){let s;switch(r){case Ee:s=e;break;case Re:s=this.file_pos+e;break;case le:s=BigInt(this.file.data.byteLength)+e;break;default:return{ret:Q,offset:0n}}return s<0?{ret:Q,offset:0n}:(this.file_pos=s,{ret:0,offset:this.file_pos})}fd_tell(){return{ret:0,offset:this.file_pos}}fd_write(e,r){let s=0;if(this.file.readonly)return{ret:p,nwritten:s};for(const i of r){const t=e.slice(i.buf,i.buf+i.buf_len);if(this.file_pos+BigInt(t.byteLength)>this.file.size){const n=this.file.data;this.file.data=new Uint8Array(Number(this.file_pos+BigInt(t.byteLength))),this.file.data.set(n)}this.file.data.set(t.slice(0,Number(this.file.size-this.file_pos)),Number(this.file_pos)),this.file_pos+=BigInt(t.byteLength),s+=i.buf_len}return{ret:0,nwritten:s}}fd_pwrite(e,r,s){let i=0;if(this.file.readonly)return{ret:p,nwritten:i};for(const t of r){const n=e.slice(t.buf,t.buf+t.buf_len);if(s+BigInt(n.byteLength)>this.file.size){const o=this.file.data;this.file.data=new Uint8Array(Number(s+BigInt(n.byteLength))),this.file.data.set(o)}this.file.data.set(n.slice(0,Number(this.file.size-s)),Number(s)),s+=BigInt(n.byteLength),i+=t.buf_len}return{ret:0,nwritten:i}}fd_filestat_get(){return{ret:0,filestat:this.file.stat()}}constructor(e){super(),this.file_pos=0n,this.file=e}}class ue extends q{fd_fdstat_get(){return{ret:0,fdstat:new M(V,0)}}fd_readdir_single(e){if(y.enabled&&(y.log("readdir_single",e),y.log(e,Object.keys(this.dir.contents))),y.log(e,Object.keys(this.dir.contents).slice(Number(e))),e>=BigInt(Object.keys(this.dir.contents).length))return{ret:0,dirent:null};const r=Object.keys(this.dir.contents)[Number(e)],s=this.dir.contents[r];return{ret:0,dirent:new Ie(e+1n,r,s.stat().filetype)}}path_filestat_get(e,r){const s=this.dir.get_entry_for_path(r);return s==null?{ret:A,filestat:null}:{ret:0,filestat:s.stat()}}path_open(e,r,s,i,t,n){let o=this.dir.get_entry_for_path(r);if(o==null)if((s&P)==P)o=this.dir.create_entry_for_path(r,(s&T)==T);else return{ret:A,fd_obj:null};else if((s&te)==te)return{ret:me,fd_obj:null};if((s&T)==T&&o.stat().filetype!==V)return{ret:Z,fd_obj:null};if(o.readonly&&(i&BigInt(C))==BigInt(C))return{ret:ae,fd_obj:null};if(!(o instanceof I)&&(s&re)==re){const a=o.truncate();if(a!=S)return{ret:a,fd_obj:null}}return{ret:S,fd_obj:o.open(n)}}path_create_directory(e){return this.path_open(0,e,P|T,0n,0n,0).ret}path_unlink_file(e){e=this.clean_path(e);const r=this.dir.get_parent_dir_for_path(e),s=e.split("/"),i=s[s.length-1],t=this.dir.get_entry_for_path(e);return t===null?A:t.stat().filetype===V?ve:(delete r.contents[i],S)}path_remove_directory(e){e=this.clean_path(e);const r=this.dir.get_parent_dir_for_path(e),s=e.split("/"),i=s[s.length-1],t=this.dir.get_entry_for_path(e);return t===null?A:!(t instanceof I)||t.stat().filetype!==V?Z:Object.keys(t.contents).length!==0?je:r.contents[i]===void 0?A:(delete r.contents[i],S)}clean_path(e){for(;e.length>0&&e[e.length-1]==="/";)e=e.slice(0,e.length-1);return e}constructor(e){super(),this.dir=e}}class Be extends ue{fd_prestat_get(){return{ret:0,prestat:G.dir(this.prestat_name.length)}}fd_prestat_dir_name(){return{ret:0,prestat_dir_name:this.prestat_name}}constructor(e,r){super(new I(r)),this.prestat_name=new TextEncoder().encode(e)}}class De{open(e){const r=new Ve(this);return e&Ue&&r.fd_seek(0n,le),r}get size(){return BigInt(this.data.byteLength)}stat(){return new z(ce,this.size)}truncate(){return this.readonly?ae:(this.data=new Uint8Array([]),S)}constructor(e,r){this.data=new Uint8Array(e),this.readonly=!!(r!=null&&r.readonly)}}class I{open(e){return new ue(this)}stat(){return new z(V,0n)}get_entry_for_path(e){let r=this;for(const s of e.split("/")){if(s=="")break;if(s!="."){if(!(r instanceof I))return null;if(r.contents[s]!=null)r=r.contents[s];else return y.log(s),null}}return r}get_parent_dir_for_path(e){if(e==="")return null;let r=this,s=r;for(const i of e.split("/")){if(i==="")break;if(i!=="."){if(!(r instanceof I))return y.log(r),null;if(r.contents[i]===void 0)return y.log(i),null;s=r,r=r.contents[i]}}return s}create_entry_for_path(e,r){let s=this;const i=e.split("/").filter(t=>t!="/");for(let t=0;t<i.length;t++){const n=i[t];if(!(s instanceof I))break;s.contents[n]!=null||(y.log("create",n),t==i.length-1&&!r?s.contents[n]=new De(new ArrayBuffer(0)):s.contents[n]=new I({})),s=s.contents[n]}return s}constructor(e){this.readonly=!1,this.contents=e}}class fe extends q{fd_filestat_get(){return{ret:0,filestat:new z(ee,BigInt(0))}}fd_fdstat_get(){const e=new M(ee,0);return e.fs_rights_base=BigInt(C),{ret:0,fdstat:e}}fd_write(e,r){let s=0;for(const i of r){const t=e.slice(i.buf,i.buf+i.buf_len);this.write(t),s+=i.buf_len}return{ret:0,nwritten:s}}static lineBuffered(e){const r=new TextDecoder("utf-8",{fatal:!1});let s="";return new fe(i=>{s+=r.decode(i,{stream:!0});const t=s.split(`
`);for(const[n,o]of t.entries())n<t.length-1?e(o):s=o})}constructor(e){super(),this.write=e}}export{fe as C,I as D,S as E,De as F,ue as O,Be as P,Fe as R,Ne as W,p as a,A as b,me as c,Ve as d};
